// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id Int @id @default(autoincrement())
  name String
  email String @unique
  password String
  image String @default("default.png")
  language String @default("en")
  created_date DateTime      @default(now())
  updated_date DateTime      @updatedAt
  post Post[]
  feedback UserOnFeedback[]
  commands Command[]
}

model Post{
  id String @id @default(uuid())
  title String
  content String
  image String?
  publish Boolean @default(false)
  created_date DateTime      @default(now())
  updated_date DateTime      @updatedAt
  user_id Int?
  user User? @relation(fields: [user_id], references: [id])
  feedbacks Feedback?
}

model Feedback{
  id String @id @default(uuid())
  like Int @default(0)
  unlike Int @default(0)
  share Int @default(0)
  user UserOnFeedback[]
  post_id String @unique
  post Post @relation(fields: [post_id],references: [id])
  commands Command[]

}

model Command {
  id String @id @default(uuid())
  text String?
  created_date DateTime      @default(now())
  replys Reply[]
  user_id Int?
  user User? @relation(fields: [user_id], references: [id])
  feedback_id String?
  feedback Feedback? @relation(fields: [feedback_id],references: [id])
}

model UserOnFeedback{
  user_id Int
  user User @relation(fields: [user_id], references: [id])
  feedback_id String
  feedback Feedback @relation(fields: [feedback_id],references: [id])
  liked String? @default("null")
  isCommand String?
  created_date DateTime      @default(now())
  @@id([user_id,feedback_id])
}

model Reply {
  id String @id @default(uuid())
  text String?
  reply_id String?
  created_date DateTime      @default(now())
  reply Reply? @relation("ReplyToReply",fields: [reply_id],references: [id])
  selfReply Reply [] @relation("ReplyToReply")
  user_emailId String?
  command_id String?
  command Command? @relation(fields: [command_id],references: [id])
}
